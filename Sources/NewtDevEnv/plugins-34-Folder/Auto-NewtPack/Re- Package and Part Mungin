Date: Sun, 13 Apr 1997 16:18:30 -0400To: Kent Borg <kentborg@borg.org>From: Steve Weyer <weyer@kagi.com>Subject: Re: Package and Part Munging Within a Newton Cc:Bcc:X-Attachments:>I have been looking through the Newt3.3 docs. To make Newt work you seem to have found out how to manipulate packages and parts via some sort of API. But I can't find any documentation on this. >Can you give me any pointers to docs on how this is done? (Did you build your own docs?)>Why I am interested: I am thinking of building an application which has both its programming and some content all in the same package, so when one user beams it to another, it all goes together. No problem so far, but I want the content to be updatable by email to the Newton, I want the package to alter its own parts to update the content. And the beaming would then be an up to date version of the content. >Being to munge packages via Newton Script would make this possible. Can you help me out here?hi Kent,if you're using beaming, if only the "content" is changing, it might be easiest to just beam that as frames and have it put away by your application. if you really want to create a package... the basic information on package format (flattened frames, etc.) is available from Apple for free (you just need to sign an agreement). with 2.0, it's easier to manipulate package objects using VBOs. so, if you wanted to write your own, it's doable (though quite messy). another option is to use NewtDevEnv's NewtPack plugin: this takes a frame representing an app, autopart or book and creates a package. you could create a modified version of your app, with part of it an existing package, and part in new data structures in heap -- and NewtPack could copy everything into a new package. I have an API for this that can be made available, assuming you'd include NewtPack with your app (and pay me for each copy). 