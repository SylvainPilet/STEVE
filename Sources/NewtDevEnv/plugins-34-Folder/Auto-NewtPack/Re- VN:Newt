Date: Wed, 2 Apr 1997 17:27:46 -0500To: Serg Koren <archimag@netaxs.com>From: Steve Weyer <weyer@kagi.com>Subject: Re: VN/NewtCc:Bcc:X-Attachments: :SteveW:8918:newtpack API: >>btw, do you use registration codes/expiration dates in your stuff -- if so, if you wouldn't mind sharing that code with me, I could add it to the plugins.>Nope. Basically all I'm doing is what you do. A hidden web page and encrypted archives.>What you *can* do however is query my RegMode slot. |NewtGUI:SKoren|.RegMode>This is a variable that determines if the version being run is registered or not. It's a boolean (true/nil). If true it's a registered version build; If it's nil it's a demo build.>I'll put some timeout logic in to expire the slot from true to nil which will allow people to try out everything until it expires. I'll save the value off in a non-deinstallable (by VN) system prefs frame. >That way if you want, you can query the slot in VN itself and refuse to execute if you find nil, or I can tell you the system prefs frame and you can look at that directly.I'll have to think about how to do this -- all of the plugins except NewtPack are passive data structures, so don't really have an opportunity to check... the plugins aren't that useful w/o VN or Newt (or docs). >Once we settle stuff I'll write up an announcement and pass it to you for your approval.hopefully, the pricing structure won't be too confusing for folks. (I guess we'll see reaction on the newtdevenv discussion list) so far, sounded like:VN Lite ($35)VN full (w/ Newt plugins) ($50)Newt full ($45)Newt "lite" (for full VN users who already have plugins) ($30) >NewtPack APIattached to this msg. (I assume you'll let me know if you've got questions or encounter problems) I'm assuming the app frame you're creating in VN should be very similar to the app format (and _package slot) described there. I'd suggest getting it to work for a simple app on 2.x first (and worry about 1.x compatibility later). I'm assuming you don't need info on other plugins since you've got the :getEvalContext method to give you an evaluation context with current constants. 